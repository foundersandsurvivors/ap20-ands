#!/bin/bash

echo "#####################################################################"
echo "# $0"
echo "# Create and initialise a new ap20 db from backup (no people/sources)"
echo "#####################################################################"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
AP20_DATABASE="demo"
if [[ "$1" == "" ]]; then
   DB=$AP20_DATABASE
else
   DB=$1
fi
###################################################################. $DIR/../.ap20_env
. /etc/environment

echo AP20_DATABASE=[$AP20_DATABASE]
echo DB=[$DB]
if ! [[ -d $AP20_WEBWORK ]]; then
    echo "$0 ##ERROR## does NOT exist AP20_WEBWORK[$AP20_WEBWORK]. Check your installation."
    exit 1
fi
echo AP20_WEBWORK=[$AP20_WEBWORK]
AP20_DBINIT_DIR="$AP20_WEBWORK/db_init/$DB"
if ! [[ -d $AP20_DBINIT_DIR ]]; then
   AP20_DBINIT_DIR="$AP20_WEBWORK/db_init/$AP20_DATABASE"
fi
echo AP20_DBINIT_DIR=[$AP20_DBINIT_DIR]
if ! [[ -d $AP20_DBINIT_DIR ]]; then
    echo "$0 ##ERROR## does NOT exist AP20_DBINIT_DIR[$AP20_DBINIT_DIR]. Check your installation."
    exit 1
fi
echo AP20_DBINIT_DIR=[$AP20_DBINIT_DIR]

AP20_SCHEMA_INIT_FILE="$AP20_DBINIT_DIR/${DB}-pg_dump--schema_only.out"
if ! [[ -f $AP20_SCHEMA_INIT_FILE ]]; then
    AP20_SCHEMA_INIT_FILE="$AP20_DBINIT_DIR/${AP20_DATABASE}-pg_dump--schema_only.out"
fi
echo AP20_SCHEMA_INIT_FILE="$AP20_DBINIT_DIR/${AP20_DATABASE}-pg_dump--schema_only.out"
# for saxon xml engine: modify as required for your system
echo SEEQ=[$SEEQ]
echo SEET=[$SEET]

DBINITFILES_DEFAULT="$AP20_WEBWORK/db_init/$AP20_DATABASE"
if ! [[ -d $DBINITFILES_DEFAULT ]]; then
    echo "$0 ##ERROR## does NOT exist DBINITFILES_DEFAULT[$DBINITFILES_DEFAULT]. Check your installation."
    exit 1
fi
echo DBINITFILES_DEFAULT=[$DBINITFILES_DEFAULT]

# parse for domain, dbstatus (test, dev, [prod]) and optional numeric version
if [[ "$DB" =~ ([a-z]+)(test|dev)([0-9]*)$ ]]; then
   DOMAIN="${BASH_REMATCH[1]}"
   STATUS="${BASH_REMATCH[2]}"
   VERSION="${BASH_REMATCH[3]}"
   echo ".. 1 DB[$DB] matched DOMAIN[$DOMAIN] STATUS[$STATUS] VERSION[$VERSION]"
else
   if [[ "$DB" =~ ([a-z]+)([0-9]*)$ ]]; then
      DOMAIN="${BASH_REMATCH[1]}"
      STATUS=""
      VERSION="${BASH_REMATCH[2]}"
      echo ".. 1 DB[$DB] matched DOMAIN[$DOMAIN] STATUS[$STATUS] VERSION[$VERSION]"
   fi
fi
echo ".. 2 DB[$DB] matched DOMAIN[$DOMAIN] STATUS[$STATUS] VERSION[$VERSION]"
DBINITFILES="$AP20_WEBWORK/db_init/$DB"
DBINITDIR_MSG="(custom location)"
# check if we have a custom init dir
if [ ! -d "$DBINITFILES" ]; then
  echo "## Warning ## If you want a custom db created, you must initialise $DBINITFILES"
  echo "#############"
  DBINITFILES=$DBINITFILES_DEFAULT
  DBINITDIR_MSG="(using default location DBINITFILES_DEFAULT[$DBINITFILES_DEFAULT)"
fi
echo "README: How to initialise a new ap20 database[$DB] "
echo "        DOMAIN[$DOMAIN] STATUS[$STATUS] VERSION[$VERSION]"
echo "====================================================================="
echo "-- DBINITFILES_DEFAULT[$DBINITFILES_DEFAULT]"
echo "-- DBINITFILES[$DBINITFILES] $DBINITDIR_MSG"
echo "-- PWD[$PWD]"
echo "-- Envt as per /etc/environment"

if [ -d "$DBINITFILES" ]; then
    echo "Database initialisation to occur from files in $DBINITFILES"
else
    echo "usage: $0 $DB # You need to ensure /etc/environment contains environment variables and DBINITFILES[$DBINITFILES] exist!"
    exit 1
fi

#####################################ls -la $PWD/.ap20_env
echo "...... fyi AP20 environment is"
/usr/bin/printenv|sort|grep AP20
echo "...... end."

# create the script
OUT=/tmp/$$

echo "
#!/bin/bash

# Generated by $0 `date`
# Reset/create database $DB owner[$2] to initialised state, with reference tables primed.
# You must: sudo chown ubuntu:ubuntu $OUT;sudo chmod 700 $OUT
# You might then like to retain it e.g. sudo mv $OUT \$webwork/bin_local/$DB-db-reset-to-initial-state.sh
#

DOMAIN=\"$DOMAIN\"
STATUS=\"$STATUS\"
VERSION=\"$VERSION\"

echo \"ONE OFF: you may need to initial postgresql roles. cd $PWD/db_init and read 00readme.txt for instructions.\"

if [ -d $AP20_DBINIT_DIR ]; then
    echo \"Directory containing initial table dumps is AP20_DBINIT_DIR[$AP20_DBINIT_DIR] exists.\"
else
    echo \"usage: $0 $DB ## ERROR: envt var AP20_DBINIT_DIR[$AP20_DBINIT_DIR] is not defined.\"
    exit 1
fi
echo \"-- Init $DB using $AP20_SCHEMA_INIT_FILE\"
dropdb $DB
createdb --encoding UTF8 --template template0 --owner $2 $DB
LOG=$AP20_DBINIT_DIR/../logs/${DB}-schema-create.log
psql $DB -f $AP20_SCHEMA_INIT_FILE > \$LOG
rc=\$?
echo \"-- Init schema rc[\$rc]\"
if [ \"\$rc\" == \"0\" ]; then
    echo \"-- Init $DB success, proceeding to initialise tables\"
else
    echo \"-- BOO. Init $DB failed. Please investigate and rectify for proceeding. See log: \$LOG\"
fi

cd $AP20_DBINIT_DIR
FILES=\`cat reftables_sequence.txt\`
for F in \$FILES
do
    base=\`basename \$F\`
    FN=\"${DB}-pg_dump--reftables_\${F}.out\"
    if ! [ -f \$FN ]; then
       FN=\"../$AP20_DATABASE/${AP20_DATABASE}-pg_dump--reftables_\${F}.out\"
    fi
    MY_FN="myload_{\$F}.sql"
    if [ -f \$MY_FN ]; then
       echo \"-- ++++ custom load \$F ++++ psql $DB -f \$MY_FN\"
       psql $DB -f \$MY_FN
    else
       echo \"-- load \$F as per host: psql $DB -f \$FN\"
       psql $DB -f \$FN
    fi
done
echo \"# Initialising top level source 0 with myload_sources-0.sql\"
psql $DB -f myload_sources-0.sql

echo \"# Initialised $DB\"
echo \"# eoj\"
exit 0
" > $OUT

chmod 755 $OUT

# Give user instructions
echo "1. Login to the host as user $2"
echo "2. Run this command:"
echo ""
echo "/tmp/$$"
echo ""
echo "This script contains commands needed to construct a new database and initialise reference tables. FYI, it contains:"
echo "<hr/>"
cat $OUT
echo "<hr/>"
exit 0
