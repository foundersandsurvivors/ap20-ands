var search_data = {
    'index': {
        'searchIndex': ["","easyrdf_collection","easyrdf_container","easyrdf_exception","easyrdf_format","easyrdf_graph","easyrdf_graphstore","easyrdf_http","easyrdf_http_client","easyrdf_http_response","easyrdf_isomorphic","easyrdf_literal","easyrdf_literal_boolean","easyrdf_literal_date","easyrdf_literal_datetime","easyrdf_literal_decimal","easyrdf_literal_html","easyrdf_literal_hexbinary","easyrdf_literal_integer","easyrdf_literal_xml","easyrdf_namespace","easyrdf_parseduri","easyrdf_parser","easyrdf_parser_arc","easyrdf_parser_exception","easyrdf_parser_json","easyrdf_parser_ntriples","easyrdf_parser_rapper","easyrdf_parser_rdfphp","easyrdf_parser_rdfxml","easyrdf_parser_rdfa","easyrdf_parser_redland","easyrdf_parser_turtle","easyrdf_resource","easyrdf_serialiser","easyrdf_serialiser_arc","easyrdf_serialiser_graphviz","easyrdf_serialiser_json","easyrdf_serialiser_jsonld","easyrdf_serialiser_ntriples","easyrdf_serialiser_rapper","easyrdf_serialiser_rdfphp","easyrdf_serialiser_rdfxml","easyrdf_serialiser_turtle","easyrdf_sparql_client","easyrdf_sparql_result","easyrdf_typemapper","easyrdf_utils","easyrdf_collection::__construct","easyrdf_collection::seek","easyrdf_collection::rewind","easyrdf_collection::current","easyrdf_collection::key","easyrdf_collection::next","easyrdf_collection::valid","easyrdf_collection::getcollectionnode","easyrdf_collection::count","easyrdf_collection::append","easyrdf_collection::offsetexists","easyrdf_collection::offsetget","easyrdf_collection::offsetset","easyrdf_collection::offsetunset","easyrdf_container::__construct","easyrdf_container::seek","easyrdf_container::rewind","easyrdf_container::current","easyrdf_container::key","easyrdf_container::next","easyrdf_container::valid","easyrdf_container::count","easyrdf_container::append","easyrdf_container::offsetexists","easyrdf_container::offsetget","easyrdf_container::offsetset","easyrdf_container::offsetunset","easyrdf_format::getnames","easyrdf_format::getformats","easyrdf_format::gethttpacceptheader","easyrdf_format::formatexists","easyrdf_format::getformat","easyrdf_format::register","easyrdf_format::unregister","easyrdf_format::registerparser","easyrdf_format::registerserialiser","easyrdf_format::guessformat","easyrdf_format::__construct","easyrdf_format::getname","easyrdf_format::getlabel","easyrdf_format::setlabel","easyrdf_format::geturi","easyrdf_format::seturi","easyrdf_format::getdefaultmimetype","easyrdf_format::getmimetypes","easyrdf_format::setmimetypes","easyrdf_format::getdefaultextension","easyrdf_format::getextensions","easyrdf_format::setextensions","easyrdf_format::setparserclass","easyrdf_format::getparserclass","easyrdf_format::newparser","easyrdf_format::setserialiserclass","easyrdf_format::getserialiserclass","easyrdf_format::newserialiser","easyrdf_format::__tostring","easyrdf_graph::__construct","easyrdf_graph::newandload","easyrdf_graph::resource","easyrdf_graph::newbnode","easyrdf_graph::newbnodeid","easyrdf_graph::parse","easyrdf_graph::parsefile","easyrdf_graph::load","easyrdf_graph::resources","easyrdf_graph::resourcesmatching","easyrdf_graph::geturi","easyrdf_graph::get","easyrdf_graph::getliteral","easyrdf_graph::getresource","easyrdf_graph::all","easyrdf_graph::allliterals","easyrdf_graph::allresources","easyrdf_graph::alloftype","easyrdf_graph::countvalues","easyrdf_graph::join","easyrdf_graph::add","easyrdf_graph::addliteral","easyrdf_graph::addresource","easyrdf_graph::set","easyrdf_graph::delete","easyrdf_graph::deletesingleproperty","easyrdf_graph::deleteresource","easyrdf_graph::deleteliteral","easyrdf_graph::isempty","easyrdf_graph::properties","easyrdf_graph::propertyuris","easyrdf_graph::reversepropertyuris","easyrdf_graph::hasproperty","easyrdf_graph::serialise","easyrdf_graph::dump","easyrdf_graph::dumpresource","easyrdf_graph::type","easyrdf_graph::typeasresource","easyrdf_graph::types","easyrdf_graph::isa","easyrdf_graph::addtype","easyrdf_graph::settype","easyrdf_graph::label","easyrdf_graph::primarytopic","easyrdf_graph::tordfphp","easyrdf_graph::counttriples","easyrdf_graph::__tostring","easyrdf_graph::__get","easyrdf_graph::__set","easyrdf_graph::__isset","easyrdf_graph::__unset","easyrdf_graphstore::__construct","easyrdf_graphstore::geturi","easyrdf_graphstore::get","easyrdf_graphstore::replace","easyrdf_graphstore::insert","easyrdf_graphstore::delete","easyrdf_graphstore::__tostring","easyrdf_http::setdefaulthttpclient","easyrdf_http::getdefaulthttpclient","easyrdf_http_client::__construct","easyrdf_http_client::seturi","easyrdf_http_client::geturi","easyrdf_http_client::setconfig","easyrdf_http_client::setheaders","easyrdf_http_client::setmethod","easyrdf_http_client::getmethod","easyrdf_http_client::getheader","easyrdf_http_client::setparameterget","easyrdf_http_client::getparameterget","easyrdf_http_client::getparametersget","easyrdf_http_client::getredirectionscount","easyrdf_http_client::setrawdata","easyrdf_http_client::getrawdata","easyrdf_http_client::resetparameters","easyrdf_http_client::request","easyrdf_http_response::__construct","easyrdf_http_response::issuccessful","easyrdf_http_response::iserror","easyrdf_http_response::isredirect","easyrdf_http_response::getstatus","easyrdf_http_response::getmessage","easyrdf_http_response::getbody","easyrdf_http_response::getrawbody","easyrdf_http_response::getversion","easyrdf_http_response::getheaders","easyrdf_http_response::getheader","easyrdf_http_response::getheadersasstring","easyrdf_http_response::fromstring","easyrdf_http_response::decodechunkedbody","easyrdf_http_response::asstring","easyrdf_http_response::__tostring","easyrdf_isomorphic::isomorphic","easyrdf_isomorphic::bijectionbetween","easyrdf_literal::create","easyrdf_literal::setdatatypemapping","easyrdf_literal::deletedatatypemapping","easyrdf_literal::getdatatypeforvalue","easyrdf_literal::__construct","easyrdf_literal::getvalue","easyrdf_literal::getdatatypeuri","easyrdf_literal::getdatatype","easyrdf_literal::getlang","easyrdf_literal::tordfphp","easyrdf_literal::__tostring","easyrdf_literal::dumpvalue","easyrdf_literal_boolean::__construct","easyrdf_literal_boolean::getvalue","easyrdf_literal_boolean::istrue","easyrdf_literal_boolean::isfalse","easyrdf_literal_date::__construct","easyrdf_literal_date::parse","easyrdf_literal_date::getvalue","easyrdf_literal_date::format","easyrdf_literal_date::year","easyrdf_literal_date::month","easyrdf_literal_date::day","easyrdf_literal_datetime::__construct","easyrdf_literal_datetime::parse","easyrdf_literal_datetime::hour","easyrdf_literal_datetime::min","easyrdf_literal_datetime::sec","easyrdf_literal_decimal::__construct","easyrdf_literal_decimal::getvalue","easyrdf_literal_html::__construct","easyrdf_literal_html::striptags","easyrdf_literal_hexbinary::__construct","easyrdf_literal_hexbinary::frombinary","easyrdf_literal_hexbinary::tobinary","easyrdf_literal_integer::__construct","easyrdf_literal_integer::getvalue","easyrdf_literal_xml::__construct","easyrdf_literal_xml::domparse","easyrdf_namespace::namespaces","easyrdf_namespace::get","easyrdf_namespace::set","easyrdf_namespace::getdefault","easyrdf_namespace::setdefault","easyrdf_namespace::delete","easyrdf_namespace::reset","easyrdf_namespace::splituri","easyrdf_namespace::prefixofuri","easyrdf_namespace::shorten","easyrdf_namespace::expand","easyrdf_parseduri::__construct","easyrdf_parseduri::isabsolute","easyrdf_parseduri::isrelative","easyrdf_parseduri::getscheme","easyrdf_parseduri::setscheme","easyrdf_parseduri::getauthority","easyrdf_parseduri::setauthority","easyrdf_parseduri::getpath","easyrdf_parseduri::setpath","easyrdf_parseduri::getquery","easyrdf_parseduri::setquery","easyrdf_parseduri::getfragment","easyrdf_parseduri::setfragment","easyrdf_parseduri::normalise","easyrdf_parseduri::resolve","easyrdf_parseduri::tostring","easyrdf_parseduri::__tostring","easyrdf_parser::parse","easyrdf_parser_arc::__construct","easyrdf_parser_arc::parse","easyrdf_parser_exception::__construct","easyrdf_parser_exception::getparserline","easyrdf_parser_exception::getparsercolumn","easyrdf_parser_json::__construct","easyrdf_parser_json::parse","easyrdf_parser_ntriples::parse","easyrdf_parser_rapper::__construct","easyrdf_parser_rapper::parse","easyrdf_parser_rdfphp::__construct","easyrdf_parser_rdfphp::parse","easyrdf_parser_rdfxml::__construct","easyrdf_parser_rdfxml::parse","easyrdf_parser_rdfa::__construct","easyrdf_parser_rdfa::parse","easyrdf_parser_redland::__construct","easyrdf_parser_redland::parse","easyrdf_parser_turtle::__construct","easyrdf_parser_turtle::parse","easyrdf_parser_turtle::iswhitespace","easyrdf_parser_turtle::isprefixstartchar","easyrdf_parser_turtle::isnamestartchar","easyrdf_parser_turtle::isnamechar","easyrdf_parser_turtle::islocalescapedchar","easyrdf_parser_turtle::isprefixchar","easyrdf_parser_turtle::islanguagestartchar","easyrdf_parser_turtle::islanguagechar","easyrdf_resource::__construct","easyrdf_resource::getgraph","easyrdf_resource::geturi","easyrdf_resource::isbnode","easyrdf_resource::getbnodeid","easyrdf_resource::prefix","easyrdf_resource::shorten","easyrdf_resource::localname","easyrdf_resource::parseuri","easyrdf_resource::htmllink","easyrdf_resource::tordfphp","easyrdf_resource::dumpvalue","easyrdf_resource::__tostring","easyrdf_resource::load","easyrdf_resource::delete","easyrdf_resource::add","easyrdf_resource::addliteral","easyrdf_resource::addresource","easyrdf_resource::set","easyrdf_resource::get","easyrdf_resource::getliteral","easyrdf_resource::getresource","easyrdf_resource::all","easyrdf_resource::allliterals","easyrdf_resource::allresources","easyrdf_resource::countvalues","easyrdf_resource::join","easyrdf_resource::propertyuris","easyrdf_resource::properties","easyrdf_resource::reversepropertyuris","easyrdf_resource::hasproperty","easyrdf_resource::types","easyrdf_resource::type","easyrdf_resource::typeasresource","easyrdf_resource::isa","easyrdf_resource::addtype","easyrdf_resource::settype","easyrdf_resource::primarytopic","easyrdf_resource::label","easyrdf_resource::dump","easyrdf_resource::__get","easyrdf_resource::__set","easyrdf_resource::__isset","easyrdf_resource::__unset","easyrdf_serialiser::__construct","easyrdf_serialiser::serialise","easyrdf_serialiser_arc::__construct","easyrdf_serialiser_arc::serialise","easyrdf_serialiser_graphviz::__construct","easyrdf_serialiser_graphviz::setdotcommand","easyrdf_serialiser_graphviz::getdotcommand","easyrdf_serialiser_graphviz::setuselabels","easyrdf_serialiser_graphviz::getuselabels","easyrdf_serialiser_graphviz::setonlylabelled","easyrdf_serialiser_graphviz::getonlylabelled","easyrdf_serialiser_graphviz::setattribute","easyrdf_serialiser_graphviz::getattribute","easyrdf_serialiser_graphviz::renderimage","easyrdf_serialiser_graphviz::serialise","easyrdf_serialiser_json::serialise","easyrdf_serialiser_jsonld::__construct","easyrdf_serialiser_jsonld::serialise","easyrdf_serialiser_ntriples::serialisevalue","easyrdf_serialiser_ntriples::serialise","easyrdf_serialiser_rapper::__construct","easyrdf_serialiser_rapper::serialise","easyrdf_serialiser_rdfphp::serialise","easyrdf_serialiser_rdfxml::serialise","easyrdf_serialiser_turtle::escapeiri","easyrdf_serialiser_turtle::quotedstring","easyrdf_serialiser_turtle::serialiseresource","easyrdf_serialiser_turtle::serialiseliteral","easyrdf_serialiser_turtle::serialiseobject","easyrdf_serialiser_turtle::serialise","easyrdf_sparql_client::__construct","easyrdf_sparql_client::getqueryuri","easyrdf_sparql_client::getupdateuri","easyrdf_sparql_client::geturi","easyrdf_sparql_client::query","easyrdf_sparql_client::counttriples","easyrdf_sparql_client::listnamedgraphs","easyrdf_sparql_client::update","easyrdf_sparql_client::insert","easyrdf_sparql_client::clear","easyrdf_sparql_result::__construct","easyrdf_sparql_result::gettype","easyrdf_sparql_result::getboolean","easyrdf_sparql_result::istrue","easyrdf_sparql_result::isfalse","easyrdf_sparql_result::numfields","easyrdf_sparql_result::numrows","easyrdf_sparql_result::getfields","easyrdf_sparql_result::dump","easyrdf_sparql_result::__tostring","easyrdf_typemapper::get","easyrdf_typemapper::set","easyrdf_typemapper::delete","easyrdf_utils::camelise","easyrdf_utils::isassociativearray","easyrdf_utils::removefragmentfromuri","easyrdf_utils::dumpresourcevalue","easyrdf_utils::dumpliteralvalue","easyrdf_utils::parsemimetype","easyrdf_utils::execcommandpipe"],
        'info': [["","",".html","","",3],["EasyRdf_Collection","","EasyRdf_Collection.html"," < EasyRdf_Resource","Sub-class of EasyRdf_Resource that represents an RDF",1],["EasyRdf_Container","","EasyRdf_Container.html"," < EasyRdf_Resource","Sub-class of EasyRdf_Resource that represents an RDF",1],["EasyRdf_Exception","","EasyRdf_Exception.html"," < Exception","EasyRdf Exception class",1],["EasyRdf_Format","","EasyRdf_Format.html","","Class the represents an RDF file format.",1],["EasyRdf_Graph","","EasyRdf_Graph.html","","Container for collection of EasyRdf_Resources.",1],["EasyRdf_GraphStore","","EasyRdf_GraphStore.html","","A class for fetching, saving and deleting graphs to",1],["EasyRdf_Http","","EasyRdf_Http.html","","Static class to set the HTTP client used by EasyRdf",1],["EasyRdf_Http_Client","","EasyRdf_Http_Client.html","","This class is an implemetation of an HTTP client in",1],["EasyRdf_Http_Response","","EasyRdf_Http_Response.html","","Class that represents an HTTP 1.0 \/ 1.1 response message.",1],["EasyRdf_Isomorphic","","EasyRdf_Isomorphic.html","","Functions for comparing two graphs with each other",1],["EasyRdf_Literal","","EasyRdf_Literal.html","","Class that represents an RDF Literal",1],["EasyRdf_Literal_Boolean","","EasyRdf_Literal_Boolean.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype xsd:boolean",1],["EasyRdf_Literal_Date","","EasyRdf_Literal_Date.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype xsd:date",1],["EasyRdf_Literal_DateTime","","EasyRdf_Literal_DateTime.html"," < EasyRdf_Literal_Date","Class that represents an RDF Literal of datatype xsd:dateTime",1],["EasyRdf_Literal_Decimal","","EasyRdf_Literal_Decimal.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype xsd:decimal",1],["EasyRdf_Literal_HTML","","EasyRdf_Literal_HTML.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype rdf:HTML",1],["EasyRdf_Literal_HexBinary","","EasyRdf_Literal_HexBinary.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype xsd:hexBinary",1],["EasyRdf_Literal_Integer","","EasyRdf_Literal_Integer.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype xsd:integer",1],["EasyRdf_Literal_XML","","EasyRdf_Literal_XML.html"," < EasyRdf_Literal","Class that represents an RDF Literal of datatype rdf:XMLLiteral",1],["EasyRdf_Namespace","","EasyRdf_Namespace.html","","A namespace registry and manipulation class.",1],["EasyRdf_ParsedUri","","EasyRdf_ParsedUri.html","","A RFC3986 compliant URI parser",1],["EasyRdf_Parser","","EasyRdf_Parser.html","","Parent class for the EasyRdf parsers",1],["EasyRdf_Parser_Arc","","EasyRdf_Parser_Arc.html"," < EasyRdf_Parser_RdfPhp","Class to parse RDF using the ARC2 library.",1],["EasyRdf_Parser_Exception","","EasyRdf_Parser_Exception.html"," < EasyRdf_Exception","EasyRdf Exception class",1],["EasyRdf_Parser_Json","","EasyRdf_Parser_Json.html"," < EasyRdf_Parser_RdfPhp","A pure-php class to parse RDF\/JSON with no dependancies.",1],["EasyRdf_Parser_Ntriples","","EasyRdf_Parser_Ntriples.html"," < EasyRdf_Parser","A pure-php class to parse N-Triples with no dependancies.",1],["EasyRdf_Parser_Rapper","","EasyRdf_Parser_Rapper.html"," < EasyRdf_Parser_Json","Class to parse RDF using the 'rapper' command line",1],["EasyRdf_Parser_RdfPhp","","EasyRdf_Parser_RdfPhp.html"," < EasyRdf_Parser","Class to parse RDF with no external dependancies.",1],["EasyRdf_Parser_RdfXml","","EasyRdf_Parser_RdfXml.html"," < EasyRdf_Parser","A pure-php class to parse RDF\/XML.",1],["EasyRdf_Parser_Rdfa","","EasyRdf_Parser_Rdfa.html"," < EasyRdf_Parser","Class to parse RDFa 1.1 with no external dependancies.",1],["EasyRdf_Parser_Redland","","EasyRdf_Parser_Redland.html"," < EasyRdf_Parser","Class to parse RDF using Redland (librdf) C library.",1],["EasyRdf_Parser_Turtle","","EasyRdf_Parser_Turtle.html"," < EasyRdf_Parser_Ntriples","Class to parse Turtle with no external dependancies.",1],["EasyRdf_Resource","","EasyRdf_Resource.html","","Class that represents an RDF resource",1],["EasyRdf_Serialiser","","EasyRdf_Serialiser.html","","Parent class for the EasyRdf serialiser",1],["EasyRdf_Serialiser_Arc","","EasyRdf_Serialiser_Arc.html"," < EasyRdf_Serialiser_RdfPhp","Class to serialise RDF using the ARC2 library.",1],["EasyRdf_Serialiser_GraphViz","","EasyRdf_Serialiser_GraphViz.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to GraphViz",1],["EasyRdf_Serialiser_Json","","EasyRdf_Serialiser_Json.html"," < EasyRdf_Serialiser_RdfPhp","Class to serialise an EasyRdf_Graph to RDF\/JSON with",1],["EasyRdf_Serialiser_JsonLd","","EasyRdf_Serialiser_JsonLd.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to JSON-LD",1],["EasyRdf_Serialiser_Ntriples","","EasyRdf_Serialiser_Ntriples.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to N-Triples with",1],["EasyRdf_Serialiser_Rapper","","EasyRdf_Serialiser_Rapper.html"," < EasyRdf_Serialiser_Ntriples","Class to serialise an EasyRdf_Graph to RDF using the",1],["EasyRdf_Serialiser_RdfPhp","","EasyRdf_Serialiser_RdfPhp.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to RDF\/PHP with",1],["EasyRdf_Serialiser_RdfXml","","EasyRdf_Serialiser_RdfXml.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to RDF\/XML with",1],["EasyRdf_Serialiser_Turtle","","EasyRdf_Serialiser_Turtle.html"," < EasyRdf_Serialiser","Class to serialise an EasyRdf_Graph to Turtle with",1],["EasyRdf_Sparql_Client","","EasyRdf_Sparql_Client.html","","Class for making SPARQL queries using the SPARQL 1.1",1],["EasyRdf_Sparql_Result","","EasyRdf_Sparql_Result.html"," < ArrayIterator","Class for returned for SPARQL SELECT and ASK query",1],["EasyRdf_TypeMapper","","EasyRdf_TypeMapper.html","","Class to map between RDF Types and PHP Classes",1],["EasyRdf_Utils","","EasyRdf_Utils.html","","Class containing static utility functions",1],["EasyRdf_Collection::__construct","EasyRdf_Collection","EasyRdf_Collection.html#method___construct","($uri, $graph)","Create a new collection - do not use this directly",2],["EasyRdf_Collection::seek","EasyRdf_Collection","EasyRdf_Collection.html#method_seek","(integer $position)","Seek to a specific position in the container",2],["EasyRdf_Collection::rewind","EasyRdf_Collection","EasyRdf_Collection.html#method_rewind","()","Rewind the iterator back to the start of the collection",2],["EasyRdf_Collection::current","EasyRdf_Collection","EasyRdf_Collection.html#method_current","()","Return the current item in the collection",2],["EasyRdf_Collection::key","EasyRdf_Collection","EasyRdf_Collection.html#method_key","()","Return the key \/ current position in the collection",2],["EasyRdf_Collection::next","EasyRdf_Collection","EasyRdf_Collection.html#method_next","()","Move forward to next item in the collection",2],["EasyRdf_Collection::valid","EasyRdf_Collection","EasyRdf_Collection.html#method_valid","()","Checks if current position is valid",2],["EasyRdf_Collection::getCollectionNode","EasyRdf_Collection","EasyRdf_Collection.html#method_getCollectionNode","(integer $offset)","Get a node for a particular offset into the collection",2],["EasyRdf_Collection::count","EasyRdf_Collection","EasyRdf_Collection.html#method_count","()","Counts the number of items in the collection",2],["EasyRdf_Collection::append","EasyRdf_Collection","EasyRdf_Collection.html#method_append","(mixed $value)","Append an item to the end of the collection",2],["EasyRdf_Collection::offsetExists","EasyRdf_Collection","EasyRdf_Collection.html#method_offsetExists","($offset)","Array Access: check if a position exists in collection",2],["EasyRdf_Collection::offsetGet","EasyRdf_Collection","EasyRdf_Collection.html#method_offsetGet","($offset)","Array Access: get an item at a specified position in",2],["EasyRdf_Collection::offsetSet","EasyRdf_Collection","EasyRdf_Collection.html#method_offsetSet","($offset, $value)","Array Access: set an item at a positon in collection",2],["EasyRdf_Collection::offsetUnset","EasyRdf_Collection","EasyRdf_Collection.html#method_offsetUnset","($offset)","Array Access: delete an item at a specific postion",2],["EasyRdf_Container::__construct","EasyRdf_Container","EasyRdf_Container.html#method___construct","($uri, $graph)","Create a new container - do not use this directly",2],["EasyRdf_Container::seek","EasyRdf_Container","EasyRdf_Container.html#method_seek","(integer $position)","Seek to a specific position in the container",2],["EasyRdf_Container::rewind","EasyRdf_Container","EasyRdf_Container.html#method_rewind","()","Rewind the iterator back to the start of the container",2],["EasyRdf_Container::current","EasyRdf_Container","EasyRdf_Container.html#method_current","()","Return the current item in the container",2],["EasyRdf_Container::key","EasyRdf_Container","EasyRdf_Container.html#method_key","()","Return the key \/ current position in the container",2],["EasyRdf_Container::next","EasyRdf_Container","EasyRdf_Container.html#method_next","()","Move forward to next item in the container",2],["EasyRdf_Container::valid","EasyRdf_Container","EasyRdf_Container.html#method_valid","()","Checks if current position is valid",2],["EasyRdf_Container::count","EasyRdf_Container","EasyRdf_Container.html#method_count","()","Counts the number of items in the container",2],["EasyRdf_Container::append","EasyRdf_Container","EasyRdf_Container.html#method_append","(mixed $value)","Append an item to the end of the container",2],["EasyRdf_Container::offsetExists","EasyRdf_Container","EasyRdf_Container.html#method_offsetExists","($offset)","Array Access: check if a position exists in container",2],["EasyRdf_Container::offsetGet","EasyRdf_Container","EasyRdf_Container.html#method_offsetGet","($offset)","Array Access: get an item at a specified position in",2],["EasyRdf_Container::offsetSet","EasyRdf_Container","EasyRdf_Container.html#method_offsetSet","($offset, $value)","Array Access: set an item at a positon in container",2],["EasyRdf_Container::offsetUnset","EasyRdf_Container","EasyRdf_Container.html#method_offsetUnset","($offset)","Array Access: delete an item at a specific postion",2],["EasyRdf_Format::getNames","EasyRdf_Format","EasyRdf_Format.html#method_getNames","()","Get a list of format names",2],["EasyRdf_Format::getFormats","EasyRdf_Format","EasyRdf_Format.html#method_getFormats","()","Get a list of all the registered formats",2],["EasyRdf_Format::getHttpAcceptHeader","EasyRdf_Format","EasyRdf_Format.html#method_getHttpAcceptHeader","(array $extraTypes = array())","Generates an HTTP Accept header string",2],["EasyRdf_Format::formatExists","EasyRdf_Format","EasyRdf_Format.html#method_formatExists","(string $name)","Check if a named graph exists",2],["EasyRdf_Format::getFormat","EasyRdf_Format","EasyRdf_Format.html#method_getFormat","(string $query)","Get a EasyRdf_Format from a name, uri or mime type",2],["EasyRdf_Format::register","EasyRdf_Format","EasyRdf_Format.html#method_register","(string $name, string $label = null, string $uri = null, string $mimeTypes = array(), string $extensions = array())","Register a new format",2],["EasyRdf_Format::unregister","EasyRdf_Format","EasyRdf_Format.html#method_unregister","(string $name)","Remove a format from the registry",2],["EasyRdf_Format::registerParser","EasyRdf_Format","EasyRdf_Format.html#method_registerParser","(string $name, string $class)","Class method to register a parser class to a format",2],["EasyRdf_Format::registerSerialiser","EasyRdf_Format","EasyRdf_Format.html#method_registerSerialiser","(string $name, string $class)","Class method to register a serialiser class to a format",2],["EasyRdf_Format::guessFormat","EasyRdf_Format","EasyRdf_Format.html#method_guessFormat","(string $data, string $filename = null)","Attempt to guess the document format from some content.",2],["EasyRdf_Format::__construct","EasyRdf_Format","EasyRdf_Format.html#method___construct","(string $name)","This constructor is for internal use only.",2],["EasyRdf_Format::getName","EasyRdf_Format","EasyRdf_Format.html#method_getName","()","Get the name of a format object",2],["EasyRdf_Format::getLabel","EasyRdf_Format","EasyRdf_Format.html#method_getLabel","()","Get the label for a format object",2],["EasyRdf_Format::setLabel","EasyRdf_Format","EasyRdf_Format.html#method_setLabel","(string $label)","Set the label for a format object",2],["EasyRdf_Format::getUri","EasyRdf_Format","EasyRdf_Format.html#method_getUri","()","Get the URI for a format object",2],["EasyRdf_Format::setUri","EasyRdf_Format","EasyRdf_Format.html#method_setUri","(string $uri)","Set the URI for a format object",2],["EasyRdf_Format::getDefaultMimeType","EasyRdf_Format","EasyRdf_Format.html#method_getDefaultMimeType","()","Get the default registered mime type for a format object",2],["EasyRdf_Format::getMimeTypes","EasyRdf_Format","EasyRdf_Format.html#method_getMimeTypes","()","Get all the registered mime types for a format object",2],["EasyRdf_Format::setMimeTypes","EasyRdf_Format","EasyRdf_Format.html#method_setMimeTypes","(array $mimeTypes)","Set the MIME Types for a format object",2],["EasyRdf_Format::getDefaultExtension","EasyRdf_Format","EasyRdf_Format.html#method_getDefaultExtension","()","Get the default registered file extension (filename",2],["EasyRdf_Format::getExtensions","EasyRdf_Format","EasyRdf_Format.html#method_getExtensions","()","Get all the registered file extensions (filename suffix)",2],["EasyRdf_Format::setExtensions","EasyRdf_Format","EasyRdf_Format.html#method_setExtensions","(mixed $extensions)","Set the file format extensions (filename suffix) for",2],["EasyRdf_Format::setParserClass","EasyRdf_Format","EasyRdf_Format.html#method_setParserClass","(string $class)","Set the parser to use for a format",2],["EasyRdf_Format::getParserClass","EasyRdf_Format","EasyRdf_Format.html#method_getParserClass","()","Get the name of the class to use to parse the format",2],["EasyRdf_Format::newParser","EasyRdf_Format","EasyRdf_Format.html#method_newParser","()","Create a new parser to parse this format",2],["EasyRdf_Format::setSerialiserClass","EasyRdf_Format","EasyRdf_Format.html#method_setSerialiserClass","(string $class)","Set the serialiser to use for a format",2],["EasyRdf_Format::getSerialiserClass","EasyRdf_Format","EasyRdf_Format.html#method_getSerialiserClass","()","Get the name of the class to use to serialise the format",2],["EasyRdf_Format::newSerialiser","EasyRdf_Format","EasyRdf_Format.html#method_newSerialiser","()","Create a new serialiser to parse this format",2],["EasyRdf_Format::__toString","EasyRdf_Format","EasyRdf_Format.html#method___toString","()","Magic method to return the name of the format when",2],["EasyRdf_Graph::__construct","EasyRdf_Graph","EasyRdf_Graph.html#method___construct","(string $uri = null, string $data = null, string $format = null)","Constructor",2],["EasyRdf_Graph::newAndLoad","EasyRdf_Graph","EasyRdf_Graph.html#method_newAndLoad","(string $uri, string $format = null)","Create a new graph and load RDF data from a URI into",2],["EasyRdf_Graph::resource","EasyRdf_Graph","EasyRdf_Graph.html#method_resource","(string $uri = null, mixed $types = array())","Get or create a resource stored in a graph",2],["EasyRdf_Graph::newBNode","EasyRdf_Graph","EasyRdf_Graph.html#method_newBNode","(mixed $types = array())","Create a new blank node in the graph and return it.",2],["EasyRdf_Graph::newBNodeId","EasyRdf_Graph","EasyRdf_Graph.html#method_newBNodeId","()","Create a new unique blank node identifier and return",2],["EasyRdf_Graph::parse","EasyRdf_Graph","EasyRdf_Graph.html#method_parse","(string $data, string $format = null, string $uri = null)","Parse some RDF data into the graph object.",2],["EasyRdf_Graph::parseFile","EasyRdf_Graph","EasyRdf_Graph.html#method_parseFile","(string $filename, string $format = null, string $uri = null)","Parse a file containing RDF data into the graph object.",2],["EasyRdf_Graph::load","EasyRdf_Graph","EasyRdf_Graph.html#method_load","(string $uri = null, string $format = null)","Load RDF data into the graph from a URI.",2],["EasyRdf_Graph::resources","EasyRdf_Graph","EasyRdf_Graph.html#method_resources","()","Get an associative array of all the resources stored",2],["EasyRdf_Graph::resourcesMatching","EasyRdf_Graph","EasyRdf_Graph.html#method_resourcesMatching","(string $property, mixed $value = null)","Get an arry of resources matching a certain property",2],["EasyRdf_Graph::getUri","EasyRdf_Graph","EasyRdf_Graph.html#method_getUri","()","Get the URI of the graph",2],["EasyRdf_Graph::get","EasyRdf_Graph","EasyRdf_Graph.html#method_get","(string $resource, string $propertyPath, string $type = null, string $lang = null)","Get a single value for a property of a resource",2],["EasyRdf_Graph::getLiteral","EasyRdf_Graph","EasyRdf_Graph.html#method_getLiteral","(string $resource, string|array $property, string $lang = null)","Get a single literal value for a property of a resource",2],["EasyRdf_Graph::getResource","EasyRdf_Graph","EasyRdf_Graph.html#method_getResource","(string $resource, string|array $property)","Get a single resource value for a property of a resource",2],["EasyRdf_Graph::all","EasyRdf_Graph","EasyRdf_Graph.html#method_all","(string $resource, string $propertyPath, string $type = null, string $lang = null)","Get all values for a property path",2],["EasyRdf_Graph::allLiterals","EasyRdf_Graph","EasyRdf_Graph.html#method_allLiterals","(string $resource, string $property, string $lang = null)","Get all literal values for a property of a resource",2],["EasyRdf_Graph::allResources","EasyRdf_Graph","EasyRdf_Graph.html#method_allResources","(string $resource, string $property)","Get all resources for a property of a resource",2],["EasyRdf_Graph::allOfType","EasyRdf_Graph","EasyRdf_Graph.html#method_allOfType","(string $type)","Get all the resources in the graph of a certain type",2],["EasyRdf_Graph::countValues","EasyRdf_Graph","EasyRdf_Graph.html#method_countValues","(string $resource, string $property, string $type = null, string $lang = null)","Count the number of values for a property of a resource",2],["EasyRdf_Graph::join","EasyRdf_Graph","EasyRdf_Graph.html#method_join","(mixed $resource, string $property, string $glue = &#039; &#039;, string $lang = null)","Concatenate all values for a property of a resource",2],["EasyRdf_Graph::add","EasyRdf_Graph","EasyRdf_Graph.html#method_add","(mixed $resource, mixed $property, mixed $value)","Add data to the graph",2],["EasyRdf_Graph::addLiteral","EasyRdf_Graph","EasyRdf_Graph.html#method_addLiteral","(mixed $resource, mixed $property, mixed $value, string $lang = null)","Add a literal value as a property of a resource",2],["EasyRdf_Graph::addResource","EasyRdf_Graph","EasyRdf_Graph.html#method_addResource","(mixed $resource, mixed $property, mixed $resource2)","Add a resource as a property of another resource",2],["EasyRdf_Graph::set","EasyRdf_Graph","EasyRdf_Graph.html#method_set","(string $resource, string $property, mixed $value)","Set a value for a property",2],["EasyRdf_Graph::delete","EasyRdf_Graph","EasyRdf_Graph.html#method_delete","(mixed $resource, string $property, mixed $value = null)","Delete a property (or optionally just a specific value)",2],["EasyRdf_Graph::deleteSingleProperty","EasyRdf_Graph","EasyRdf_Graph.html#method_deleteSingleProperty","(mixed $resource, string $property, mixed $value = null)","Delete a property (or optionally just a specific value)",2],["EasyRdf_Graph::deleteResource","EasyRdf_Graph","EasyRdf_Graph.html#method_deleteResource","(mixed $resource, mixed $property, mixed $resource2)","Delete a resource from a property of another resource",2],["EasyRdf_Graph::deleteLiteral","EasyRdf_Graph","EasyRdf_Graph.html#method_deleteLiteral","(mixed $resource, mixed $property, mixed $value, string $lang = null)","Delete a literal value from a property of a resource",2],["EasyRdf_Graph::isEmpty","EasyRdf_Graph","EasyRdf_Graph.html#method_isEmpty","()","Check if the graph contains any statements",2],["EasyRdf_Graph::properties","EasyRdf_Graph","EasyRdf_Graph.html#method_properties","($resource)","Get a list of all the shortened property names (qnames)",2],["EasyRdf_Graph::propertyUris","EasyRdf_Graph","EasyRdf_Graph.html#method_propertyUris","($resource)","Get a list of the full URIs for the properties of a",2],["EasyRdf_Graph::reversePropertyUris","EasyRdf_Graph","EasyRdf_Graph.html#method_reversePropertyUris","($resource)","Get a list of the full URIs for the properties that",2],["EasyRdf_Graph::hasProperty","EasyRdf_Graph","EasyRdf_Graph.html#method_hasProperty","(mixed $resource, string $property, mixed $value = null)","Check to see if a property exists for a resource.",2],["EasyRdf_Graph::serialise","EasyRdf_Graph","EasyRdf_Graph.html#method_serialise","(mixed $format, array $options = array())","Serialise the graph into RDF",2],["EasyRdf_Graph::dump","EasyRdf_Graph","EasyRdf_Graph.html#method_dump","(string $format = &#039;html&#039;)","Return a human readable view of all the resources in",2],["EasyRdf_Graph::dumpResource","EasyRdf_Graph","EasyRdf_Graph.html#method_dumpResource","(mixed $resource, string $format = &#039;html&#039;)","Return a human readable view of a resource and its",2],["EasyRdf_Graph::type","EasyRdf_Graph","EasyRdf_Graph.html#method_type","($resource = null)","Get the resource type of the graph",2],["EasyRdf_Graph::typeAsResource","EasyRdf_Graph","EasyRdf_Graph.html#method_typeAsResource","($resource = null)","Get the resource type of the graph as a EasyRdf_Resource",2],["EasyRdf_Graph::types","EasyRdf_Graph","EasyRdf_Graph.html#method_types","($resource = null)","Get a list of types for a resource",2],["EasyRdf_Graph::isA","EasyRdf_Graph","EasyRdf_Graph.html#method_isA","(string $resource, string $type)","Check if a resource is of the specified type",2],["EasyRdf_Graph::addType","EasyRdf_Graph","EasyRdf_Graph.html#method_addType","(string $resource, string $types)","Add one or more rdf:type properties to a resource",2],["EasyRdf_Graph::setType","EasyRdf_Graph","EasyRdf_Graph.html#method_setType","(string $resource, string $type)","Change the rdf:type property for a resource",2],["EasyRdf_Graph::label","EasyRdf_Graph","EasyRdf_Graph.html#method_label","($resource = null, $lang = null)","Get a human readable label for a resource",2],["EasyRdf_Graph::primaryTopic","EasyRdf_Graph","EasyRdf_Graph.html#method_primaryTopic","($resource = null)","Get the primary topic of the graph",2],["EasyRdf_Graph::toRdfPhp","EasyRdf_Graph","EasyRdf_Graph.html#method_toRdfPhp","()","Returns the graph as a RDF\/PHP associative array",2],["EasyRdf_Graph::countTriples","EasyRdf_Graph","EasyRdf_Graph.html#method_countTriples","()","Calculates the number of triples in the graph",2],["EasyRdf_Graph::__toString","EasyRdf_Graph","EasyRdf_Graph.html#method___toString","()","Magic method to return URI of resource when casted",2],["EasyRdf_Graph::__get","EasyRdf_Graph","EasyRdf_Graph.html#method___get","(string $name)","Magic method to get a property of the graph",2],["EasyRdf_Graph::__set","EasyRdf_Graph","EasyRdf_Graph.html#method___set","(string $name, string $value)","Magic method to set the value for a property of the",2],["EasyRdf_Graph::__isset","EasyRdf_Graph","EasyRdf_Graph.html#method___isset","(string $name)","Magic method to check if a property exists",2],["EasyRdf_Graph::__unset","EasyRdf_Graph","EasyRdf_Graph.html#method___unset","(string $name)","Magic method to delete a property of the graph",2],["EasyRdf_GraphStore::__construct","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method___construct","(string $uri)","Create a new SPARQL Graph Store client",2],["EasyRdf_GraphStore::getUri","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method_getUri","()","Get the URI of the graph store",2],["EasyRdf_GraphStore::get","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method_get","(string $uriRef)","Fetch a named graph from the graph store",2],["EasyRdf_GraphStore::replace","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method_replace","(object $graph, string $uriRef = null, string $format = &#039;ntriples&#039;)","Replace the contents of a graph in the graph store",2],["EasyRdf_GraphStore::insert","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method_insert","(object $graph, string $uriRef = null, string $format = &#039;ntriples&#039;)","Add data to a graph in the graph store",2],["EasyRdf_GraphStore::delete","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method_delete","(string $uriRef)","Delete a graph from the graph store",2],["EasyRdf_GraphStore::__toString","EasyRdf_GraphStore","EasyRdf_GraphStore.html#method___toString","()","Magic method to return URI of the graph store when",2],["EasyRdf_Http::setDefaultHttpClient","EasyRdf_Http","EasyRdf_Http.html#method_setDefaultHttpClient","(object $httpClient)","Set the HTTP Client object used to fetch RDF data",2],["EasyRdf_Http::getDefaultHttpClient","EasyRdf_Http","EasyRdf_Http.html#method_getDefaultHttpClient","()","Get the HTTP Client object used to fetch RDF data",2],["EasyRdf_Http_Client::__construct","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method___construct","(string $uri = null, array $config = null)","Constructor method.",2],["EasyRdf_Http_Client::setUri","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setUri","(string $uri)","Set the URI for the next request",2],["EasyRdf_Http_Client::getUri","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getUri","($asString = true)","Get the URI for the next request",2],["EasyRdf_Http_Client::setConfig","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setConfig","(array $config = array())","Set configuration parameters for this HTTP client",2],["EasyRdf_Http_Client::setHeaders","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setHeaders","(string $name, string $value = null)","Set a request header",2],["EasyRdf_Http_Client::setMethod","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setMethod","(string $method)","Set the next request's method",2],["EasyRdf_Http_Client::getMethod","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getMethod","()","Get the method for the next request",2],["EasyRdf_Http_Client::getHeader","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getHeader","(string $key)","Get the value of a specific header",2],["EasyRdf_Http_Client::setParameterGet","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setParameterGet","(string $name, string $value = null)","Set a GET parameter for the request.",2],["EasyRdf_Http_Client::getParameterGet","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getParameterGet","(string $name)","Get a GET parameter for the request.",2],["EasyRdf_Http_Client::getParametersGet","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getParametersGet","()","Get all the GET parameters",2],["EasyRdf_Http_Client::getRedirectionsCount","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getRedirectionsCount","()","Get the number of redirections done on the last request",2],["EasyRdf_Http_Client::setRawData","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_setRawData","(string|resource $data)","Set the raw (already encoded) POST data.",2],["EasyRdf_Http_Client::getRawData","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_getRawData","()","Get the raw (already encoded) POST data.",2],["EasyRdf_Http_Client::resetParameters","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_resetParameters","(bool $clearAll = false)","Clear all GET and POST parameters",2],["EasyRdf_Http_Client::request","EasyRdf_Http_Client","EasyRdf_Http_Client.html#method_request","($method = null)","Send the HTTP request and return an HTTP response object",2],["EasyRdf_Http_Response::__construct","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method___construct","(int $status, array $headers, string $body = null, string $version = &#039;1.1&#039;, string $message = null)","Constructor.",2],["EasyRdf_Http_Response::isSuccessful","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_isSuccessful","()","Check whether the response in successful",2],["EasyRdf_Http_Response::isError","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_isError","()","Check whether the response is an error",2],["EasyRdf_Http_Response::isRedirect","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_isRedirect","()","Check whether the response is a redirection",2],["EasyRdf_Http_Response::getStatus","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getStatus","()","Get the HTTP response status code",2],["EasyRdf_Http_Response::getMessage","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getMessage","()","Return a message describing the HTTP response code",2],["EasyRdf_Http_Response::getBody","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getBody","()","Get the response body as string",2],["EasyRdf_Http_Response::getRawBody","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getRawBody","()","Get the raw response body (as transfered \"on wire\")",2],["EasyRdf_Http_Response::getVersion","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getVersion","()","Get the HTTP version of the response",2],["EasyRdf_Http_Response::getHeaders","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getHeaders","()","Get the response headers",2],["EasyRdf_Http_Response::getHeader","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getHeader","(<abbr title=\"string$header\">string$header<\/abbr> $header)","Get a specific header as string, or null if it is not",2],["EasyRdf_Http_Response::getHeadersAsString","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_getHeadersAsString","(boolean $statusLine = true, string $br = &#039;\n&#039;)","Get all headers as string",2],["EasyRdf_Http_Response::fromString","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_fromString","(string $responseStr)","Create an EasyRdf_Http_Response object from a HTTP",2],["EasyRdf_Http_Response::decodeChunkedBody","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_decodeChunkedBody","(string $body)","Decode a \"chunked\" transfer-encoded body and return",2],["EasyRdf_Http_Response::asString","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method_asString","(string $br = &#039;\n&#039;)","Get the entire response as string",2],["EasyRdf_Http_Response::__toString","EasyRdf_Http_Response","EasyRdf_Http_Response.html#method___toString","()","Implements magic __toString()",2],["EasyRdf_Isomorphic::isomorphic","EasyRdf_Isomorphic","EasyRdf_Isomorphic.html#method_isomorphic","(object $graphA, object $graphB)","Check if one graph is isomorphic (equal) to another",2],["EasyRdf_Isomorphic::bijectionBetween","EasyRdf_Isomorphic","EasyRdf_Isomorphic.html#method_bijectionBetween","(object $graphA, object $graphB)","Returns an associative array of bnode identifiers representing",2],["EasyRdf_Literal::create","EasyRdf_Literal","EasyRdf_Literal.html#method_create","(mixed $value, string $lang = null, string $datatype = null)","Create a new literal object",2],["EasyRdf_Literal::setDatatypeMapping","EasyRdf_Literal","EasyRdf_Literal.html#method_setDatatypeMapping","(string $datatype, string $class)","Register an RDF datatype with a PHP class name",2],["EasyRdf_Literal::deleteDatatypeMapping","EasyRdf_Literal","EasyRdf_Literal.html#method_deleteDatatypeMapping","(string $datatype)","Remove the mapping between an RDF datatype and a PHP",2],["EasyRdf_Literal::getDatatypeForValue","EasyRdf_Literal","EasyRdf_Literal.html#method_getDatatypeForValue","($value)","Get datatype URI for a PHP value.",2],["EasyRdf_Literal::__construct","EasyRdf_Literal","EasyRdf_Literal.html#method___construct","(string $value, string $lang = null, string $datatype = null)","Constructor for creating a new literal",2],["EasyRdf_Literal::getValue","EasyRdf_Literal","EasyRdf_Literal.html#method_getValue","()","Returns the value of the literal.",2],["EasyRdf_Literal::getDatatypeUri","EasyRdf_Literal","EasyRdf_Literal.html#method_getDatatypeUri","()","Returns the full datatype URI of the literal.",2],["EasyRdf_Literal::getDatatype","EasyRdf_Literal","EasyRdf_Literal.html#method_getDatatype","()","Returns the shortened datatype URI of the literal.",2],["EasyRdf_Literal::getLang","EasyRdf_Literal","EasyRdf_Literal.html#method_getLang","()","Returns the language of the literal.",2],["EasyRdf_Literal::toRdfPhp","EasyRdf_Literal","EasyRdf_Literal.html#method_toRdfPhp","()","Returns the properties of the literal as an associative",2],["EasyRdf_Literal::__toString","EasyRdf_Literal","EasyRdf_Literal.html#method___toString","()","Magic method to return the value of a literal as a",2],["EasyRdf_Literal::dumpValue","EasyRdf_Literal","EasyRdf_Literal.html#method_dumpValue","(string $format = &#039;html&#039;, string $color = &#039;black&#039;)","Return pretty-print view of the literal",2],["EasyRdf_Literal_Boolean::__construct","EasyRdf_Literal_Boolean","EasyRdf_Literal_Boolean.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new boolean literal",2],["EasyRdf_Literal_Boolean::getValue","EasyRdf_Literal_Boolean","EasyRdf_Literal_Boolean.html#method_getValue","()","Return the value of the literal cast to a PHP bool",2],["EasyRdf_Literal_Boolean::isTrue","EasyRdf_Literal_Boolean","EasyRdf_Literal_Boolean.html#method_isTrue","()","Return true if the value of the literal is 'true' or",2],["EasyRdf_Literal_Boolean::isFalse","EasyRdf_Literal_Boolean","EasyRdf_Literal_Boolean.html#method_isFalse","()","Return true if the value of the literal is 'false'",2],["EasyRdf_Literal_Date::__construct","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method___construct","(mixed $value = null, string $lang = null, string $datatype = null)","Constructor for creating a new date literal",2],["EasyRdf_Literal_Date::parse","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_parse","(string $value)","Parses a string using DateTime and creates a new literal",2],["EasyRdf_Literal_Date::getValue","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_getValue","()","Returns the date as a PHP DateTime object",2],["EasyRdf_Literal_Date::format","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_format","(string $format)","Returns date formatted according to given format",2],["EasyRdf_Literal_Date::year","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_year","()","A full integer representation of the year, 4 digits",2],["EasyRdf_Literal_Date::month","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_month","()","Integer representation of the month",2],["EasyRdf_Literal_Date::day","EasyRdf_Literal_Date","EasyRdf_Literal_Date.html#method_day","()","Integer representation of the day of the month",2],["EasyRdf_Literal_DateTime::__construct","EasyRdf_Literal_DateTime","EasyRdf_Literal_DateTime.html#method___construct","(mixed $value = null, string $lang = null, string $datatype = null)","Constructor for creating a new date and time literal",2],["EasyRdf_Literal_DateTime::parse","EasyRdf_Literal_DateTime","EasyRdf_Literal_DateTime.html#method_parse","(string $value)","Parses a string using DateTime and creates a new literal",2],["EasyRdf_Literal_DateTime::hour","EasyRdf_Literal_DateTime","EasyRdf_Literal_DateTime.html#method_hour","()","24-hour format of the hour as an integer",2],["EasyRdf_Literal_DateTime::min","EasyRdf_Literal_DateTime","EasyRdf_Literal_DateTime.html#method_min","()","The minutes pasts the hour as an integer",2],["EasyRdf_Literal_DateTime::sec","EasyRdf_Literal_DateTime","EasyRdf_Literal_DateTime.html#method_sec","()","The seconds pasts the minute as an integer",2],["EasyRdf_Literal_Decimal::__construct","EasyRdf_Literal_Decimal","EasyRdf_Literal_Decimal.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new decimal literal",2],["EasyRdf_Literal_Decimal::getValue","EasyRdf_Literal_Decimal","EasyRdf_Literal_Decimal.html#method_getValue","()","Return the value of the literal cast to a PHP double",2],["EasyRdf_Literal_HTML::__construct","EasyRdf_Literal_HTML","EasyRdf_Literal_HTML.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new rdf:HTML literal",2],["EasyRdf_Literal_HTML::stripTags","EasyRdf_Literal_HTML","EasyRdf_Literal_HTML.html#method_stripTags","(string $allowableTags = null)","Strip the HTML tags from the literal",2],["EasyRdf_Literal_HexBinary::__construct","EasyRdf_Literal_HexBinary","EasyRdf_Literal_HexBinary.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new xsd:hexBinary literal",2],["EasyRdf_Literal_HexBinary::fromBinary","EasyRdf_Literal_HexBinary","EasyRdf_Literal_HexBinary.html#method_fromBinary","(string $binary)","Constructor for creating a new literal object from",2],["EasyRdf_Literal_HexBinary::toBinary","EasyRdf_Literal_HexBinary","EasyRdf_Literal_HexBinary.html#method_toBinary","()","Decode the hexadecimal string into a binary blob",2],["EasyRdf_Literal_Integer::__construct","EasyRdf_Literal_Integer","EasyRdf_Literal_Integer.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new integer literal",2],["EasyRdf_Literal_Integer::getValue","EasyRdf_Literal_Integer","EasyRdf_Literal_Integer.html#method_getValue","()","Return the value of the literal cast to a PHP int",2],["EasyRdf_Literal_XML::__construct","EasyRdf_Literal_XML","EasyRdf_Literal_XML.html#method___construct","(mixed $value, string $lang = null, string $datatype = null)","Constructor for creating a new rdf:XMLLiteral literal",2],["EasyRdf_Literal_XML::domParse","EasyRdf_Literal_XML","EasyRdf_Literal_XML.html#method_domParse","()","Parse the XML literal into a DOMDocument",2],["EasyRdf_Namespace::namespaces","EasyRdf_Namespace","EasyRdf_Namespace.html#method_namespaces","()","Return all the namespaces registered",2],["EasyRdf_Namespace::get","EasyRdf_Namespace","EasyRdf_Namespace.html#method_get","(string $prefix)","Return a namespace given its prefix.",2],["EasyRdf_Namespace::set","EasyRdf_Namespace","EasyRdf_Namespace.html#method_set","(string $prefix, string $long)","Register a new namespace.",2],["EasyRdf_Namespace::getDefault","EasyRdf_Namespace","EasyRdf_Namespace.html#method_getDefault","()","Get the default namespace",2],["EasyRdf_Namespace::setDefault","EasyRdf_Namespace","EasyRdf_Namespace.html#method_setDefault","(string $namespace)","Set the default namespace",2],["EasyRdf_Namespace::delete","EasyRdf_Namespace","EasyRdf_Namespace.html#method_delete","(string $prefix)","Delete an existing namespace.",2],["EasyRdf_Namespace::reset","EasyRdf_Namespace","EasyRdf_Namespace.html#method_reset","()","Delete the anonymous namespaces and reset the counter",2],["EasyRdf_Namespace::splitUri","EasyRdf_Namespace","EasyRdf_Namespace.html#method_splitUri","(string $uri, bool $createNamespace = false)","Try and breakup a URI into a prefix and local part",2],["EasyRdf_Namespace::prefixOfUri","EasyRdf_Namespace","EasyRdf_Namespace.html#method_prefixOfUri","(string $uri)","Return the prefix namespace that a URI belongs to.",2],["EasyRdf_Namespace::shorten","EasyRdf_Namespace","EasyRdf_Namespace.html#method_shorten","(string $uri, bool $createNamespace = false)","Shorten a URI by substituting in the namespace prefix.",2],["EasyRdf_Namespace::expand","EasyRdf_Namespace","EasyRdf_Namespace.html#method_expand","(string $shortUri)","Expand a shortened URI (qname) back into a full URI.",2],["EasyRdf_ParsedUri::__construct","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method___construct","(mixed $uri = null)","Constructor for creating a new parsed URI",2],["EasyRdf_ParsedUri::isAbsolute","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_isAbsolute","()","Returns true if this is an absolute (complete) URI",2],["EasyRdf_ParsedUri::isRelative","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_isRelative","()","Returns true if this is an relative (partial) URI",2],["EasyRdf_ParsedUri::getScheme","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_getScheme","()","Returns the scheme of the URI (e.g.",2],["EasyRdf_ParsedUri::setScheme","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_setScheme","(string $scheme)","Sets the scheme of the URI (e.g.",2],["EasyRdf_ParsedUri::getAuthority","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_getAuthority","()","Returns the authority of the URI (e.g.",2],["EasyRdf_ParsedUri::setAuthority","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_setAuthority","(string $authority)","Sets the authority of the URI (e.g.",2],["EasyRdf_ParsedUri::getPath","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_getPath","()","Returns the path of the URI (e.g.",2],["EasyRdf_ParsedUri::setPath","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_setPath","(string $path)","Set the path of the URI (e.g.",2],["EasyRdf_ParsedUri::getQuery","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_getQuery","()","Returns the query string part of the URI (e.g.",2],["EasyRdf_ParsedUri::setQuery","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_setQuery","(string $query)","Set the query string of the URI (e.g.",2],["EasyRdf_ParsedUri::getFragment","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_getFragment","()","Returns the fragment part of the URI (i.e.",2],["EasyRdf_ParsedUri::setFragment","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_setFragment","(string $fragment)","Set the fragment of the URI (i.e.",2],["EasyRdf_ParsedUri::normalise","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_normalise","()","Normalises the path of this URI if it has one.",2],["EasyRdf_ParsedUri::resolve","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_resolve","($relUri)","Resolves a relative URI using this URI as the base",2],["EasyRdf_ParsedUri::toString","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method_toString","()","Convert the parsed URI back into a string",2],["EasyRdf_ParsedUri::__toString","EasyRdf_ParsedUri","EasyRdf_ParsedUri.html#method___toString","()","Magic method to convert the URI, when casted, back",2],["EasyRdf_Parser::parse","EasyRdf_Parser","EasyRdf_Parser.html#method_parse","($graph, $data, $format, $baseUri)","Sub-classes must follow this protocol",2],["EasyRdf_Parser_Arc::__construct","EasyRdf_Parser_Arc","EasyRdf_Parser_Arc.html#method___construct","()","Constructor",2],["EasyRdf_Parser_Arc::parse","EasyRdf_Parser_Arc","EasyRdf_Parser_Arc.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse an RDF document into an EasyRdf_Graph",2],["EasyRdf_Parser_Exception::__construct","EasyRdf_Parser_Exception","EasyRdf_Parser_Exception.html#method___construct","($message, $line = null, $column = null)","",2],["EasyRdf_Parser_Exception::getParserLine","EasyRdf_Parser_Exception","EasyRdf_Parser_Exception.html#method_getParserLine","()","",2],["EasyRdf_Parser_Exception::getParserColumn","EasyRdf_Parser_Exception","EasyRdf_Parser_Exception.html#method_getParserColumn","()","",2],["EasyRdf_Parser_Json::__construct","EasyRdf_Parser_Json","EasyRdf_Parser_Json.html#method___construct","()","Constructor",2],["EasyRdf_Parser_Json::parse","EasyRdf_Parser_Json","EasyRdf_Parser_Json.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse RDF\/JSON into an EasyRdf_Graph",2],["EasyRdf_Parser_Ntriples::parse","EasyRdf_Parser_Ntriples","EasyRdf_Parser_Ntriples.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse an N-Triples document into an EasyRdf_Graph",2],["EasyRdf_Parser_Rapper::__construct","EasyRdf_Parser_Rapper","EasyRdf_Parser_Rapper.html#method___construct","(string $rapperCmd = &#039;rapper&#039;)","Constructor",2],["EasyRdf_Parser_Rapper::parse","EasyRdf_Parser_Rapper","EasyRdf_Parser_Rapper.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse an RDF document into an EasyRdf_Graph",2],["EasyRdf_Parser_RdfPhp::__construct","EasyRdf_Parser_RdfPhp","EasyRdf_Parser_RdfPhp.html#method___construct","()","Constructor",2],["EasyRdf_Parser_RdfPhp::parse","EasyRdf_Parser_RdfPhp","EasyRdf_Parser_RdfPhp.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse RDF\/PHP into an EasyRdf_Graph",2],["EasyRdf_Parser_RdfXml::__construct","EasyRdf_Parser_RdfXml","EasyRdf_Parser_RdfXml.html#method___construct","()","Constructor",2],["EasyRdf_Parser_RdfXml::parse","EasyRdf_Parser_RdfXml","EasyRdf_Parser_RdfXml.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse an RDF\/XML document into an EasyRdf_Graph",2],["EasyRdf_Parser_Rdfa::__construct","EasyRdf_Parser_Rdfa","EasyRdf_Parser_Rdfa.html#method___construct","()","Constructor",2],["EasyRdf_Parser_Rdfa::parse","EasyRdf_Parser_Rdfa","EasyRdf_Parser_Rdfa.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse RDFa 1.1 into an EasyRdf_Graph",2],["EasyRdf_Parser_Redland::__construct","EasyRdf_Parser_Redland","EasyRdf_Parser_Redland.html#method___construct","()","Constructor",2],["EasyRdf_Parser_Redland::parse","EasyRdf_Parser_Redland","EasyRdf_Parser_Redland.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse an RDF document into an EasyRdf_Graph",2],["EasyRdf_Parser_Turtle::__construct","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method___construct","()","Constructor",2],["EasyRdf_Parser_Turtle::parse","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_parse","(object $graph, string $data, string $format, string $baseUri)","Parse Turtle into an EasyRdf_Graph",2],["EasyRdf_Parser_Turtle::isWhitespace","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isWhitespace","($c)","Returns true if $c is a whitespace character",2],["EasyRdf_Parser_Turtle::isPrefixStartChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isPrefixStartChar","($c)","",2],["EasyRdf_Parser_Turtle::isNameStartChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isNameStartChar","($c)","",2],["EasyRdf_Parser_Turtle::isNameChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isNameChar","($c)","",2],["EasyRdf_Parser_Turtle::isLocalEscapedChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isLocalEscapedChar","($c)","",2],["EasyRdf_Parser_Turtle::isPrefixChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isPrefixChar","($c)","",2],["EasyRdf_Parser_Turtle::isLanguageStartChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isLanguageStartChar","($c)","",2],["EasyRdf_Parser_Turtle::isLanguageChar","EasyRdf_Parser_Turtle","EasyRdf_Parser_Turtle.html#method_isLanguageChar","($c)","",2],["EasyRdf_Resource::__construct","EasyRdf_Resource","EasyRdf_Resource.html#method___construct","($uri, $graph = null)","Constructor",2],["EasyRdf_Resource::getGraph","EasyRdf_Resource","EasyRdf_Resource.html#method_getGraph","()","Return the graph that this resource belongs to",2],["EasyRdf_Resource::getUri","EasyRdf_Resource","EasyRdf_Resource.html#method_getUri","()","Returns the URI for the resource.",2],["EasyRdf_Resource::isBNode","EasyRdf_Resource","EasyRdf_Resource.html#method_isBNode","()","Check to see if a resource is a blank node.",2],["EasyRdf_Resource::getBNodeId","EasyRdf_Resource","EasyRdf_Resource.html#method_getBNodeId","()","Get the identifier for a blank node",2],["EasyRdf_Resource::prefix","EasyRdf_Resource","EasyRdf_Resource.html#method_prefix","()","Get a the prefix of the namespace that this resource",2],["EasyRdf_Resource::shorten","EasyRdf_Resource","EasyRdf_Resource.html#method_shorten","()","Get a shortened version of the resources URI.",2],["EasyRdf_Resource::localName","EasyRdf_Resource","EasyRdf_Resource.html#method_localName","()","Gets the local name of the URI of this resource",2],["EasyRdf_Resource::parseUri","EasyRdf_Resource","EasyRdf_Resource.html#method_parseUri","()","Parse the URI of the resource and return as a ParsedUri",2],["EasyRdf_Resource::htmlLink","EasyRdf_Resource","EasyRdf_Resource.html#method_htmlLink","(string $text = null, array $options = array())","Generates an HTML anchor tag, linking to this resource.",2],["EasyRdf_Resource::toRdfPhp","EasyRdf_Resource","EasyRdf_Resource.html#method_toRdfPhp","()","Returns the properties of the resource as an RDF\/PHP",2],["EasyRdf_Resource::dumpValue","EasyRdf_Resource","EasyRdf_Resource.html#method_dumpValue","(string $format = &#039;html&#039;, string $color = &#039;blue&#039;)","Return pretty-print view of the resource",2],["EasyRdf_Resource::__toString","EasyRdf_Resource","EasyRdf_Resource.html#method___toString","()","Magic method to return URI of resource when casted",2],["EasyRdf_Resource::load","EasyRdf_Resource","EasyRdf_Resource.html#method_load","(string $format = null)","Perform a load (download of remote URI) of the resource",2],["EasyRdf_Resource::delete","EasyRdf_Resource","EasyRdf_Resource.html#method_delete","(string $property, object $value = null)","Delete a property (or optionally just a specific value)",2],["EasyRdf_Resource::add","EasyRdf_Resource","EasyRdf_Resource.html#method_add","(mixed $property, mixed $value)","Add values to for a property of the resource",2],["EasyRdf_Resource::addLiteral","EasyRdf_Resource","EasyRdf_Resource.html#method_addLiteral","(mixed $property, mixed $values, string $lang = null)","Add a literal value as a property of the resource",2],["EasyRdf_Resource::addResource","EasyRdf_Resource","EasyRdf_Resource.html#method_addResource","(mixed $property, mixed $resource2)","Add a resource as a property of the resource",2],["EasyRdf_Resource::set","EasyRdf_Resource","EasyRdf_Resource.html#method_set","(string $property, mixed $value)","Set value for a property",2],["EasyRdf_Resource::get","EasyRdf_Resource","EasyRdf_Resource.html#method_get","(string|array $property, string $type = null, string $lang = null)","Get a single value for a property",2],["EasyRdf_Resource::getLiteral","EasyRdf_Resource","EasyRdf_Resource.html#method_getLiteral","(string|array $property, string $lang = null)","Get a single literal value for a property of the resource",2],["EasyRdf_Resource::getResource","EasyRdf_Resource","EasyRdf_Resource.html#method_getResource","(string|array $property)","Get a single resource value for a property of the resource",2],["EasyRdf_Resource::all","EasyRdf_Resource","EasyRdf_Resource.html#method_all","(string $property, string $type = null, string $lang = null)","Get all values for a property",2],["EasyRdf_Resource::allLiterals","EasyRdf_Resource","EasyRdf_Resource.html#method_allLiterals","(string $property, string $lang = null)","Get all literal values for a property of the resource",2],["EasyRdf_Resource::allResources","EasyRdf_Resource","EasyRdf_Resource.html#method_allResources","(string $property)","Get all resources for a property of the resource",2],["EasyRdf_Resource::countValues","EasyRdf_Resource","EasyRdf_Resource.html#method_countValues","(string $property, string $type = null, string $lang = null)","Count the number of values for a property of a resource",2],["EasyRdf_Resource::join","EasyRdf_Resource","EasyRdf_Resource.html#method_join","(string $property, string $glue = &#039; &#039;, string $lang = null)","Concatenate all values for a property into a string.",2],["EasyRdf_Resource::propertyUris","EasyRdf_Resource","EasyRdf_Resource.html#method_propertyUris","()","Get a list of the full URIs for the properties of this",2],["EasyRdf_Resource::properties","EasyRdf_Resource","EasyRdf_Resource.html#method_properties","()","Get a list of all the shortened property names (qnames)",2],["EasyRdf_Resource::reversePropertyUris","EasyRdf_Resource","EasyRdf_Resource.html#method_reversePropertyUris","()","Get a list of the full URIs for the properties that",2],["EasyRdf_Resource::hasProperty","EasyRdf_Resource","EasyRdf_Resource.html#method_hasProperty","(string $property, mixed $value = null)","Check to see if a property exists for this resource.",2],["EasyRdf_Resource::types","EasyRdf_Resource","EasyRdf_Resource.html#method_types","()","Get a list of types for a resource.",2],["EasyRdf_Resource::type","EasyRdf_Resource","EasyRdf_Resource.html#method_type","()","Get a single type for a resource.",2],["EasyRdf_Resource::typeAsResource","EasyRdf_Resource","EasyRdf_Resource.html#method_typeAsResource","()","Get a single type for a resource, as a resource.",2],["EasyRdf_Resource::isA","EasyRdf_Resource","EasyRdf_Resource.html#method_isA","(string $type)","Check if a resource is of the specified type",2],["EasyRdf_Resource::addType","EasyRdf_Resource","EasyRdf_Resource.html#method_addType","(string $types)","Add one or more rdf:type properties to the resource",2],["EasyRdf_Resource::setType","EasyRdf_Resource","EasyRdf_Resource.html#method_setType","(string $type)","Change the rdf:type property for the resource",2],["EasyRdf_Resource::primaryTopic","EasyRdf_Resource","EasyRdf_Resource.html#method_primaryTopic","()","Get the primary topic of this resource.",2],["EasyRdf_Resource::label","EasyRdf_Resource","EasyRdf_Resource.html#method_label","($lang = null)","Get a human readable label for this resource",2],["EasyRdf_Resource::dump","EasyRdf_Resource","EasyRdf_Resource.html#method_dump","(string $format = &#039;html&#039;)","Return a human readable view of the resource and its",2],["EasyRdf_Resource::__get","EasyRdf_Resource","EasyRdf_Resource.html#method___get","(string $name)","Magic method to get a property of a resource",2],["EasyRdf_Resource::__set","EasyRdf_Resource","EasyRdf_Resource.html#method___set","(string $name, string $value)","Magic method to set the value for a property of a resource",2],["EasyRdf_Resource::__isset","EasyRdf_Resource","EasyRdf_Resource.html#method___isset","(string $name)","Magic method to check if a property exists",2],["EasyRdf_Resource::__unset","EasyRdf_Resource","EasyRdf_Resource.html#method___unset","(string $name)","Magic method to delete a property of the resource",2],["EasyRdf_Serialiser::__construct","EasyRdf_Serialiser","EasyRdf_Serialiser.html#method___construct","()","",2],["EasyRdf_Serialiser::serialise","EasyRdf_Serialiser","EasyRdf_Serialiser.html#method_serialise","($graph, $format, array $options = array())","Sub-classes must follow this protocol",2],["EasyRdf_Serialiser_Arc::__construct","EasyRdf_Serialiser_Arc","EasyRdf_Serialiser_Arc.html#method___construct","()","Constructor",2],["EasyRdf_Serialiser_Arc::serialise","EasyRdf_Serialiser_Arc","EasyRdf_Serialiser_Arc.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Serialise an EasyRdf_Graph into RDF format of choice.",2],["EasyRdf_Serialiser_GraphViz::__construct","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method___construct","()","Constructor",2],["EasyRdf_Serialiser_GraphViz::setDotCommand","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_setDotCommand","(string $cmd)","Set the path to the GraphViz 'dot' command",2],["EasyRdf_Serialiser_GraphViz::getDotCommand","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_getDotCommand","()","Get the path to the GraphViz 'dot' command",2],["EasyRdf_Serialiser_GraphViz::setUseLabels","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_setUseLabels","(bool $useLabels)","Turn on\/off the option to display labels instead of",2],["EasyRdf_Serialiser_GraphViz::getUseLabels","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_getUseLabels","()","Get the state of the use labels option",2],["EasyRdf_Serialiser_GraphViz::setOnlyLabelled","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_setOnlyLabelled","(bool $onlyLabelled)","Turn on\/off the option to only display nodes and edges",2],["EasyRdf_Serialiser_GraphViz::getOnlyLabelled","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_getOnlyLabelled","()","Get the state of the only Only Labelled option",2],["EasyRdf_Serialiser_GraphViz::setAttribute","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_setAttribute","(string $name, string $value)","Set an attribute on the GraphViz graph",2],["EasyRdf_Serialiser_GraphViz::getAttribute","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_getAttribute","(string $name)","Get an attribute of the GraphViz graph",2],["EasyRdf_Serialiser_GraphViz::renderImage","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_renderImage","($graph, $format = &#039;png&#039;)","Internal function to render a graph into an image",2],["EasyRdf_Serialiser_GraphViz::serialise","EasyRdf_Serialiser_GraphViz","EasyRdf_Serialiser_GraphViz.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Serialise an EasyRdf_Graph into a GraphViz dot document.",2],["EasyRdf_Serialiser_Json::serialise","EasyRdf_Serialiser_Json","EasyRdf_Serialiser_Json.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Method to serialise an EasyRdf_Graph to RDF\/JSON",2],["EasyRdf_Serialiser_JsonLd::__construct","EasyRdf_Serialiser_JsonLd","EasyRdf_Serialiser_JsonLd.html#method___construct","()","",2],["EasyRdf_Serialiser_JsonLd::serialise","EasyRdf_Serialiser_JsonLd","EasyRdf_Serialiser_JsonLd.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","",2],["EasyRdf_Serialiser_Ntriples::serialiseValue","EasyRdf_Serialiser_Ntriples","EasyRdf_Serialiser_Ntriples.html#method_serialiseValue","(array|object $value)","Serialise an RDF value into N-Triples",2],["EasyRdf_Serialiser_Ntriples::serialise","EasyRdf_Serialiser_Ntriples","EasyRdf_Serialiser_Ntriples.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Serialise an EasyRdf_Graph into N-Triples",2],["EasyRdf_Serialiser_Rapper::__construct","EasyRdf_Serialiser_Rapper","EasyRdf_Serialiser_Rapper.html#method___construct","(string $rapperCmd = &#039;rapper&#039;)","Constructor",2],["EasyRdf_Serialiser_Rapper::serialise","EasyRdf_Serialiser_Rapper","EasyRdf_Serialiser_Rapper.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Serialise an EasyRdf_Graph to the RDF format of choice.",2],["EasyRdf_Serialiser_RdfPhp::serialise","EasyRdf_Serialiser_RdfPhp","EasyRdf_Serialiser_RdfPhp.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Method to serialise an EasyRdf_Graph to RDF\/PHP",2],["EasyRdf_Serialiser_RdfXml::serialise","EasyRdf_Serialiser_RdfXml","EasyRdf_Serialiser_RdfXml.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Method to serialise an EasyRdf_Graph to RDF\/XML",2],["EasyRdf_Serialiser_Turtle::escapeIri","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_escapeIri","(string $resourceIri)","Given a IRI string, escape and enclose in angle brackets.",2],["EasyRdf_Serialiser_Turtle::quotedString","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_quotedString","(string $value)","Given a string, enclose in quotes and escape any quotes",2],["EasyRdf_Serialiser_Turtle::serialiseResource","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_serialiseResource","(<a href=\"EasyRdf_Resource.html\"><abbr title=\"EasyRdf_Resource\">EasyRdf_Resource<\/abbr><\/a> $resource, boolean $createNamespace = false)","Given a an EasyRdf_Resource or URI, convert it into",2],["EasyRdf_Serialiser_Turtle::serialiseLiteral","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_serialiseLiteral","(<a href=\"EasyRdf_Literal.html\"><abbr title=\"EasyRdf_Literal\">EasyRdf_Literal<\/abbr><\/a> $literal)","Given an EasyRdf_Literal object, convert it into a",2],["EasyRdf_Serialiser_Turtle::serialiseObject","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_serialiseObject","(<a href=\"EasyRdf_Resource.html\"><abbr title=\"EasyRdf_Resource\">EasyRdf_Resource<\/abbr><\/a>|<a href=\"EasyRdf_Literal.html\"><abbr title=\"EasyRdf_Literal\">EasyRdf_Literal<\/abbr><\/a> $object)","Convert an EasyRdf object into a string suitable to",2],["EasyRdf_Serialiser_Turtle::serialise","EasyRdf_Serialiser_Turtle","EasyRdf_Serialiser_Turtle.html#method_serialise","(<a href=\"EasyRdf_Graph.html\"><abbr title=\"EasyRdf_Graph\">EasyRdf_Graph<\/abbr><\/a> $graph, string $format, array $options = array())","Serialise an EasyRdf_Graph to Turtle.",2],["EasyRdf_Sparql_Client::__construct","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method___construct","(string $queryUri, string $updateUri = null)","Create a new SPARQL endpoint client",2],["EasyRdf_Sparql_Client::getQueryUri","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_getQueryUri","()","Get the URI of the SPARQL query endpoint",2],["EasyRdf_Sparql_Client::getUpdateUri","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_getUpdateUri","()","Get the URI of the SPARQL update endpoint",2],["EasyRdf_Sparql_Client::getUri","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_getUri","()","",2],["EasyRdf_Sparql_Client::query","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_query","(string $query)","Make a query to the SPARQL endpoint",2],["EasyRdf_Sparql_Client::countTriples","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_countTriples","(string $condition = &#039;?s ?p ?o&#039;)","Count the number of triples in a SPARQL 1.1 endpoint",2],["EasyRdf_Sparql_Client::listNamedGraphs","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_listNamedGraphs","(string $limit = null)","Get a list of named graphs from a SPARQL 1.1 endpoint",2],["EasyRdf_Sparql_Client::update","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_update","(string $query)","Make an update request to the SPARQL endpoint",2],["EasyRdf_Sparql_Client::insert","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_insert","($data, $graphUri = null)","",2],["EasyRdf_Sparql_Client::clear","EasyRdf_Sparql_Client","EasyRdf_Sparql_Client.html#method_clear","($graphUri, $silent = false)","",2],["EasyRdf_Sparql_Result::__construct","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method___construct","(string $data, string $mimeType)","Create a new SPARQL Result object",2],["EasyRdf_Sparql_Result::getType","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_getType","()","Get the query result type (boolean\/bindings)",2],["EasyRdf_Sparql_Result::getBoolean","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_getBoolean","()","Return the boolean value of the query result",2],["EasyRdf_Sparql_Result::isTrue","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_isTrue","()","Return true if the result of the query was true.",2],["EasyRdf_Sparql_Result::isFalse","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_isFalse","()","Return false if the result of the query was false.",2],["EasyRdf_Sparql_Result::numFields","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_numFields","()","Return the number of fields in a query result of type",2],["EasyRdf_Sparql_Result::numRows","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_numRows","()","Return the number of rows in a query result of type",2],["EasyRdf_Sparql_Result::getFields","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_getFields","()","Get the field names in a query result of type bindings.",2],["EasyRdf_Sparql_Result::dump","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method_dump","(string $format = &#039;html&#039;)","Return a human readable view of the query result.",2],["EasyRdf_Sparql_Result::__toString","EasyRdf_Sparql_Result","EasyRdf_Sparql_Result.html#method___toString","()","Magic method to return value of the result to string",2],["EasyRdf_TypeMapper::get","EasyRdf_TypeMapper","EasyRdf_TypeMapper.html#method_get","(string $type)","Get the registered class for an RDF type",2],["EasyRdf_TypeMapper::set","EasyRdf_TypeMapper","EasyRdf_TypeMapper.html#method_set","(string $type, string $class)","Register an RDF type with a PHP Class name",2],["EasyRdf_TypeMapper::delete","EasyRdf_TypeMapper","EasyRdf_TypeMapper.html#method_delete","(string $type)","Delete an existing RDF type mapping.",2],["EasyRdf_Utils::camelise","EasyRdf_Utils","EasyRdf_Utils.html#method_camelise","(string $str)","Convert a string into CamelCase",2],["EasyRdf_Utils::isAssociativeArray","EasyRdf_Utils","EasyRdf_Utils.html#method_isAssociativeArray","(mixed $param)","Check if something is an associative array",2],["EasyRdf_Utils::removeFragmentFromUri","EasyRdf_Utils","EasyRdf_Utils.html#method_removeFragmentFromUri","(mixed $uri)","Remove the fragment from a URI (if it has one)",2],["EasyRdf_Utils::dumpResourceValue","EasyRdf_Utils","EasyRdf_Utils.html#method_dumpResourceValue","(mixed $resource, string $format = &#039;html&#039;, string $color = &#039;blue&#039;)","Return pretty-print view of a resource URI",2],["EasyRdf_Utils::dumpLiteralValue","EasyRdf_Utils","EasyRdf_Utils.html#method_dumpLiteralValue","(mixed $literal, string $format = &#039;html&#039;, string $color = &#039;black&#039;)","Return pretty-print view of a literal",2],["EasyRdf_Utils::parseMimeType","EasyRdf_Utils","EasyRdf_Utils.html#method_parseMimeType","(string $mimeType)","Clean up and split a mime-type up into its parts",2],["EasyRdf_Utils::execCommandPipe","EasyRdf_Utils","EasyRdf_Utils.html#method_execCommandPipe","(string $command, array $args = null, string $input = null, string $dir = null)","Execute a command as a pipe",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']